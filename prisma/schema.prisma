// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fish {
  id                        String                      @id @default(cuid())
  scientific_name           String                      @unique
  native                    Boolean
  image                     String
  habitats                  Habitat[]
  gears                     Gear[]
  FishCommonNameByCommunity FishCommonNameByCommunity[]
  SuggestedNames            SuggestedCommonNames[]

  @@map("fish")
}

model Habitat {
  id   String @id @default(cuid())
  name String @unique
  fish Fish[]

  @@map("habitats")
}

model Gear {
  id   String @id @default(cuid())
  name String @unique
  fish Fish[]

  @@map("gears")
}

model Community {
  id          String @id @default(cuid())
  name        String
  description String

  municipality_id String
  municipality    Municipality @relation(fields: [municipality_id], references: [id])

  FishCommonNameByCommunity FishCommonNameByCommunity[]
  SuggestedNames            SuggestedCommonNames[]

  @@map("communities")
}

model Municipality {
  id   String @id @default(cuid())
  name String

  uf_name   String
  uf        UF          @relation(fields: [uf_name], references: [uf_name])
  Community Community[]

  @@map("municipalities")
}

model UF {
  uf_name      String         @id
  uf           String         @unique
  Municipality Municipality[]

  @@map("ufs")
}

model FishCommonNameByCommunity {
  common_name String

  fish_id String
  fish    Fish   @relation(fields: [fish_id], references: [id])

  community_id String
  community    Community @relation(fields: [community_id], references: [id])

  @@id([fish_id, community_id, common_name])
  @@map("fish_common_name_by_community")
}

enum Status {
  PENDING
  APPROVED
  DISCARDED
}

model SuggestedCommonNames {
  id            String @id @default(cuid())
  name          String
  email         String
  suggestedName String
  status        Status @default(PENDING)

  fish_id String
  fish    Fish   @relation(fields: [fish_id], references: [id])

  community_id String
  community    Community @relation(fields: [community_id], references: [id])

  @@map("suggested_common_names")
}
